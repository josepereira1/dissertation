service=co
version=0.0.1
logs.on=yes

#   LOCALHOST
#server.port=8085
#resources.static=src/main/resources/static

# DOCKER
resources.static=webapps/${service}-static-files

# security
security.jwt.prefix=Bearer
security.jwt.header=Authorization
security.jwt.claim=Authorities
security.jwt.secret=TooCbDNBXz5xUJPodc5MhijkjLfdjWxm
security.jwt.signature-algorithm=HS256
security.jwt.expiration-time=6000
security.password-encoder.strength=5

# mongo
#spring.data.mongodb.host=localhost
spring.data.mongodb.host=mongo
spring.data.mongodb.port=27017
spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.username=root
#spring.data.mongodb.password=password
spring.data.mongodb.database=co

# rabbitmq server
#spring.rabbitmq.host=localhost
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.path=/

# Asynchronous communication (rabbitmq)
message.schema=${resources.static}/message.json
subscriber.queue.name=${service}.consumer.queue
publisher.exchange.name=${service}.publisher.exchange
general.waiting.time.between.message.and.save=5000

#   publisher exchanges names
saga.publisher.exchange.name=saga.publisher.exchange
cp.publisher.exchange.name=cp.publisher.exchange
qp.publisher.exchange.name=qp.publisher.exchange
cc.publisher.exchange.name=cc.publisher.exchange
qc.publisher.exchange.name=qc.publisher.exchange
co.publisher.exchange.name=co.publisher.exchange
inventory.publisher.exchange.name=inventory.publisher.exchange
sc.publisher.exchange.name=sc.publisher.exchange
employee.publisher.exchange.name=employee.publisher.exchange
client.publisher.exchange.name=client.publisher.exchange

# SAGAS ################################################################

saga.method=saga

# ----------------------------------------------------------------------
# CREATE ORDER SAGA

create.order.saga.0.name=create.order.saga.0
create.order.saga.0.commit.routing.key=create.order.saga.0.commit
create.order.saga.0.commit.method.name=create.order.saga.0.commit

# SC
create.order.saga.0.sc.routing.key=create.order.saga.0.sc.create.order
create.order.saga.0.sc.local.transaction.method.name=create.order.saga.0.sc.local.transaction
create.order.saga.0.sc.compensating.transaction.method.name=create.order.saga.0.sc.compensating.transaction

# QP
create.order.saga.0.qp.routing.key=create.order.saga.0.qp.create.order
create.order.saga.0.qp.local.transaction.method.name=create.order.saga.0.qp.local.transaction
create.order.saga.0.qp.compensating.transaction.method.name=create.order.saga.0.qp.compensating.transaction

# CO
create.order.saga.0.co.routing.key=create.order.saga.0.co.create.order
create.order.saga.0.co.local.transaction.method.name=create.order.saga.0.co.local.transaction
create.order.saga.0.co.compensating.transaction.method.name=create.order.saga.0.co.compensating.transaction

# INVENTORY
create.order.saga.0.inventory.routing.key=create.order.saga.0.inventory.create.order
create.order.saga.0.inventory.local.transaction.method.name=create.order.saga.0.inventory.local.transaction
create.order.saga.0.inventory.compensating.transaction.method.name=create.order.saga.0.inventory.compensating.transaction

# ----------------------------------------------------------------------